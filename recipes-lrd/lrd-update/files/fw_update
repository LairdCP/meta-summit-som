#! /bin/sh

die() {
    echo "${1}" >&2
    echo "Firmware update failed" >&2
    exit 2
}

usage() {
    echo "Usage: $0: [-m <method>] [-s <side>] [-x value] [-v] <url>"
    exit 3
}

[ $# -ge 1 ] || usage

o_quiet=true
o_restart=true

update_ok=false

# determine update side
devnum=$(sed -nr 's,.*/dev/(mmcblk[0-9]+)p([0-9]+).*,\1 \2,p' /proc/cmdline)
mmc=${devnum% *}
part=${devnum#* }

[ "${part}" -lt 4 ] && o_side=b || o_side=a

read -r mmctype < /sys/block/${mmc}/device/type
[ "${mmctype}" = "SD" ] && run_on_sd=true || run_on_sd=false

${run_on_sd} && o_method=complete || o_method=full

while getopts m:s:x:v name; do
    case ${name} in
    m)  o_method=${OPTARG} ;;
    s)  o_side=${OPTARG} ;;
    x)  case "${OPTARG}" in
            *r*) o_restart=false ;;
        esac ;;
    v)  o_verbose="-v"; o_quiet=false ;;
    ?)  usage ;;
    esac
done
shift $((OPTIND - 1))

url="${1}"

if [ "${o_method}" = complete ]; then
    ${run_on_sd} || die "only 'full' update method supported when booting from eMMC flash"
    p_method=${o_method}
else
    ${run_on_sd} && die "only 'complete' update method supported when booting from SD card"
    p_method=${o_method}-${o_side}
fi

${o_quiet} && exec >/dev/null

case "${url}" in
*://*)
    if [ -x /usr/bin/curl ]; then
        ${o_quiet} && o_dlsilent="-s"
        download_cmd="/usr/bin/curl ${o_dlsilent} ${url}"
    elif [ -x /usr/bin/wget ]; then
        ${o_quiet} && o_dlsilent="-q"
        download_cmd="/usr/bin/wget ${o_dlsilent} -O - ${url}"
    else
        die "Download utility not found (need curl or wget)"
    fi

    ${download_cmd} | swupdate-client -p -e stable,${p_method} ${o_verbose} -
    ;;

*)
    swupdate-client -p -e stable,${p_method} ${o_verbose} "${url}"
    ;;
esac

if [ $? -eq 0 ]; then
    echo "Firmware update succeeded" >&2
    if ${o_restart} && ! ${run_on_sd}; then
        reboot
    fi
else
    echo "Firmware update failed" >&2
    exit 1
fi
